;; C++ indentation style
(defconst vk/c_style
  '((c-electric-pound-behavior   . nil)
    (c-tab-always-indent         . t)
    (c-comment-only-line-offset  . 0)
    (c-hanging-braces-alist      . ((class-open)
                                    (class-close)
                                    (defun-open)
                                    (defun-close)
                                    (inline-open)
                                    (inline-close)
                                    (brace-list-open)
                                    (brace-list-close)
                                    (brace-list-intro)
                                    (brace-list-entry)
                                    (block-open)
                                    (block-close)
                                    (substatement-open)
                                    (statement-case-open)
                                    (class-open)))
    (c-hanging-colons-alist      . ((inher-intro)
                                    (case-label)
                                    (label)
                                    (access-label)
                                    (access-key)
                                    (member-init-intro)))
    (c-cleanup-list              . (scope-operator
                                    list-close-comma
                                    defun-close-semi))
    (c-offsets-alist             . ((arglist-close         .  c-lineup-arglist)
                                    (label                 . -4)
                                    (access-label          . -4)
                                    (substatement-open     .  0)
                                    (statement-case-intro  .  4)
                                    (statement-block-intro .  c-lineup-for)
                                    (case-label            .  4)
                                    (block-open            .  0)
                                    (inline-open           .  0)
                                    (topmost-intro-cont    .  0)
                                    (knr-argdecl-intro     . -4)
                                    (brace-list-open       .  0)
                                    (brace-list-intro      .  4)))
    (c-echo-syntactic-information-p . t)))

;; CC++ mode handling
(defun vk_c_hook ()
  "Source Initialization Hook."

  ;; Set my style for the current buffer
  (c-add-style "vk/c_style" vk/c_style t)

  ;; Additional style stuff
  (c-set-offset 'member-init-intro '++)

  ;; Abbrevation expansion
  (abbrev-mode 1)

  (defun vk_header_format ()
    "Format the given file as a header file."
    (interactive)
    (setq BaseFileName (file-name-sans-extension (file-name-nondirectory buffer-file-name)))
    (insert "#if !defined(")
    (push-mark)
    (insert BaseFileName)
    (upcase-region (mark) (point))
    (pop-mark)
    (insert "_H)\n")
    (insert "/* ========================================================================\n")
    (insert " * $File: $\n")
    (insert " * $Date: $\n")
    (insert " * $Revision: $\n")
    (insert " * $Creator: Vladislav Kvach $\n")
    (insert " * ========================================================================\n")
    (insert " */")
    (insert "\n")
    (insert "#define ")
    (push-mark)
    (insert BaseFileName)
    (upcase-region (mark) (point))
    (pop-mark)
    (insert "_H\n")
    (insert "#endif"))

  (defun vk_source_format ()
    "Format the given file as a source file."
    (interactive)
    (setq BaseFileName (file-name-sans-extension (file-name-nondirectory buffer-file-name)))
    (insert "/* ========================================================================\n")
    (insert " * $File: $\n")
    (insert " * $Date: $\n")
    (insert " * $Revision: $\n")
    (insert " * $Creator: Vladislav Kvach $\n")
    (insert " * ========================================================================\n")
    (insert " */")
    (insert "\n"))

  (cond ((file-exists-p buffer-file-name) t)
        ((string-match "[.]c" buffer-file-name) (vk_source_format))
        ((string-match "[.]h" buffer-file-name) (vk_header_format))))

(add-hook 'c-mode-common-hook 'vk_c_hook)